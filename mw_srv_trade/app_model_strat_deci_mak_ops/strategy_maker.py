from mw_srv_trade.app_common_ops.app_trade_market_operations import market_status
from mw_srv_trade.app_common_ops.inst_trade_selection_update_ticks_indi import trade_ready_instruments_df
from mw_srv_trade.app_model_strat_deci_mak_ops.day_open_strategy import inst_mod_str_dos_exec
from mw_srv_trade.app_common_trade_lib.strategy_builder.super_log_buy_sell_strat import strategy_order_decision_maker
from mw_srv_trade.app_common_trade_lib.session_builder.retrive_request_token import super_user_session
from mw_srv_trade.app_common_trade_logger.logger import cus_logger


def inst_mod_str_gen_ord_deci_mak(auto_inputs):
    """
    This code will create each new orders in the file by comparing the previous two records generated by the
    super-trend indicator.
    """
    trade_ready_inst_records = trade_ready_instruments_df()
    sp_user_ses, sp_user_rec = super_user_session()
    for trade_ready_inst_record_position, trade_ready_inst_record in trade_ready_inst_records.iterrows():
        inst_mod_str_gen_ord_glb_obj = {}
        trade_ready_inst_mk_status = trade_ready_inst_record.instrument_trading_symbol.replace(':', '_')
        if trade_ready_inst_record.avail == 'Y' and market_status(trade_ready_inst_mk_status):
            strategy_name = trade_ready_inst_record.start_name
            if trade_ready_inst_record.start_name in ["super_long_buy_side", "super_long_sell_side"]:
                inst_mod_str_gen_ord_glb_obj['strategy_name'] = strategy_name
                inst_mod_str_gen_ord_glb_obj['inst_model_record'] = trade_ready_inst_record
                inst_mod_str_gen_ord_glb_obj['auto_inputs'] = auto_inputs
                #strategy_order_decision_maker(inst_mod_str_gen_ord_glb_obj, sp_user_ses)
            elif trade_ready_inst_record.start_name == "day_open_strategy":
                inst_mod_str_gen_ord_glb_obj['strategy_name'] = strategy_name
                inst_mod_str_gen_ord_glb_obj['trade_ready_inst_record'] = trade_ready_inst_record
                inst_mod_str_gen_ord_glb_obj['auto_inputs'] = auto_inputs
                inst_mod_str_dos_exec(inst_mod_str_gen_ord_glb_obj, sp_user_ses)
    cus_logger.info('storing regular orders function is completed')
